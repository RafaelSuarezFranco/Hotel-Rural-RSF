unit Unit15;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, QRCtrls, QuickRpt, Vcl.ExtCtrls;

type
  TInformeDinamico = class(TForm)
    QuickRep1: TQuickRep;
    QRBand1: TQRBand;
    QRLabel1: TQRLabel;
    QRBand2: TQRBand;
    QRShape1: TQRShape;
    QRBand3: TQRBand;
    QRShape2: TQRShape;
    QRBand4: TQRBand;
    QRSysData1: TQRSysData;
    QRLabel5: TQRLabel;
    QRLabel6: TQRLabel;
    QRSysData2: TQRSysData;
    procedure FormActivate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }

  end;

var
  InformeDinamico: TInformeDinamico;
  listacampos: Array of String;
  tabla: String;

  arraylabel: Array of TQRLabel;
  arraytext: Array of TQRDBText;

implementation

{$R *.dfm}

 uses
  Unit3, Unit14;


procedure TInformeDinamico.FormActivate(Sender: TObject);
var
cantidadcampos: integer;
i: integer;

nuevolabel:TQRLabel;
nuevotext:TQRDBText;

begin
  cantidadcampos := InformeDinamicoGenerador.DevolverCantidadCampos();
  tabla := InformeDinamicoGenerador.DevolverTabla();

  SetLength(listacampos, cantidadcampos);
  SetLength(arraylabel, cantidadcampos);
  SetLength(arraytext, cantidadcampos);

  for i := 0 to Length(listacampos)-1 do
    begin
      listacampos[i] :=  InformeDinamicoGenerador.DevolverCampo(i);
    end;

  //ahora que tenemos los campos y la tabla, construimos los elementos del informe
  // QRBand3 = banda cabecera
  // QRBand2 = banda detalle

  for i := 0 to Length(listacampos)-1 do
    begin
      nuevolabel := TQRLabel.create(self);
      nuevolabel.Parent := QRBand3;
      nuevolabel.Caption := listacampos[i];
      nuevolabel.Top := 12;
      nuevolabel.Left := i*100 + 5;

      nuevotext := TQRDBText.create(self);

    end;


end;

end.
